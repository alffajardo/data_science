niv      21     58.5
niv      21     58.9
niv      22.1   60.7
niv      23.5   69.8
niv      24.2   70.9
niv      25.9   76.2
niv      26.5   76.1
niv      26.5   77
niv      26.5   77.7
niv      28.6   84.7
")
rm(list=ls())
Input = ("
Species   Temp   Pulse
ex       20.8   67.9
ex       20.8   65.1
ex       24     77.3
ex       24     78.7
ex       24     79.4
ex       24     80.4
ex       26.2   85.8
ex       26.2   86.6
ex       26.2   87.5
ex       26.2   89.1
ex       28.4   98.6
ex       29    100.8
ex       30.4   99.3
ex       30.4  101.7
niv      17.2   44.3
niv      18.3   47.2
niv      18.3   47.6
niv      18.3   49.6
niv      18.9   50.3
niv      18.9   51.8
niv      20.4   60
niv      21     58.5
niv      21     58.9
niv      22.1   60.7
niv      23.5   69.8
niv      24.2   70.9
niv      25.9   76.2
niv      26.5   76.1
niv      26.5   77
niv      26.5   77.7
niv      28.6   84.7
")
Data = read.table(textConnection(Input),header=TRUE)
View(Data)
View(Data)
plot(x   = Data$Temp,
y   = Data$Pulse,
col = Data$Species,
pch = 16,
xlab = "Temperature",
ylab = "Pulse")
legend('bottomright',
legend = levels(Data$Species),
col = 1:2,
cex = 1,
pch = 16)
rm(list=ls())
setwd("GitHub/data_science/")
dir()
album2<- read.delim("album2")
album2<- read.delim("album2.csv")
View(album2)
View(album2)
album <- read.delim("album.csv")
View(album)
View(album)
attach(album)
plot(adverts,sales)
albumSales.1 <- lm(album1$sales ~ album1$adverts)
album 1<- read.delim("album.csv")
plot(adverts,sales)
albumSales.1 <- lm(album1$sales ~ album1$adverts)
albumSales.1 <- lm(album1$sales ~ album1$adverts)
album1<- read.delim("album.csv")
albumSales.1 <- lm(album1$sales ~ album1$adverts)
albumSales.1
summary(albumSales.1)
sqrt(3346)
sqrt(.3346)
library(broom)
?predict
predict.glm()
predict.glm
album1<- read.delim("album.csv")
attach(album)
plot(adverts,sales)
abline(lm(sales~adverts))
album1<- read.delim("album.csv")
attach(album)
plot(adverts,sales)
abline(lm(sales~adverts))
predict(albumSales.1,1:10)
predict(albumSales.1,1)
predict(albumSales.1,3)
?predifct
predict(glm)
read.delim(pubs.dat)
read.delim(pubs.cs  )
read.delim("pubs.csv")
x <- runif
x <- runif(200,10000,2000000)
y <- runif(2000,200000,349392828) + 3x
y <- runif(2000,200000,349392828) + 3*x
plot(x,y)
plot(x,y)
y <- runif(200,200000,349392828) + 3*x
plot(x,y)
plot(x,y,pch="te amo", col = "darkred")
plot(x,y,pch="te amo", col = "darkred",cex=0.2)
plot(x,y,type="n", col = "darkred",cex=0.2)
for i in 1:200
for i in 1:200 { text(x[i],y[i],labels = "te amo",col="red")}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red")}
for i in 1:200 { text(x[i],y[i],labels = "te amo",col="red"),cex=0.5}
for i in 1:200 { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
plot(x,y,type="n", col = "darkred",cex=0.2)
for i in 1:200 { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
plot(x,y,type="n", col = "darkred",cex=0.2)
for (i in 1:200) { text(x[i],y[i],labels = "te amo Talia",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo Talia",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo Talia",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo Talia",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo Talia",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo Talia",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo Talia",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo Talia",col="red",cex = 0.5)}
plot(x,y,type="n", col = "darkred",cex=0.2)
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
plot(x,y,type="n", col = "darkred",cex=0.2)
plot(x,y,type="n", col = "darkred",cex=0.2)
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
plot(x,y,type="n", col = "darkred",cex=0.2)
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
for (i in 1:200) { text(x[i],y[i],labels = "te amo",col="red",cex = 0.5)}
plot(x,y,type="n", col = "darkred",cex=0.2)
plot(x,y,type="n", col = "darkred",cex=0.2)
plot(x,y,type="n", col = "darkred",cex=0.2)
plot(x,y,type="n", col = "darkred",cex=0.2)
plot(x,y,type="n", col = "darkred",cex=0.2)
album2<-read.delim("Album Sales 2.dat", header = TRUE)
album2<-read.delim("Album Sales 2.dat", header = TRUE)
rm(list=ls())
album2<-read.delim("Album Sales 2.dat", header = TRUE)
head(album2)
albumSales.2 <- lm(sales ~ adverts, data = album2)
albumSales.3 <- lm(sales ~ adverts + airplay + attract, data = album2)
summary(albumSales.2)
sumary(albumSales.3)
summary(albumSales.3)
library(QuantPsyc)
albumSales.3 <- lm(sales ~ adverts + airplay + attract, data = album2)
lm.beta(albumSales.3)
confint(albumSales.3)
attach(album2)
modelo1 <- sales~adverts + attract + airplay
modelo1 <- sales~adverts + attract + airplay
modelo2 <- sales ~ attract + airplay + adverts
modelo3 <- sales ~ aiplay+adverts + attract
summary(modelo1)
modelo1
modelo1 <- lm(sales~adverts + attract + airplay)
modelo2 <- lm(sales ~ attract + airplay + adverts)
modelo3 <- lm(sales ~ airplay+adverts + attract)
summary(modelo1)
sumary(modelo2)
summary(modelo2)
anova(albumSales.2, albumSales.3)
anova(albumSales.2,modelo3)
anova(modelo1)
anova(albumSales.2)
anova(albumSales.3)
cooks.distance(albumSales.2)
album2$residuals<-resid(albumSales.3)
album2$residuals<-resid(albumSales.3)
lbum2$standardized.residuals<- rstandard(albumSales.3)
album2$residuals<-resid(albumSales.3)
album2$standardized.residuals<- rstandard(albumSales.3)
album2$studentized.residuals<-rstudent(albumSales.3)
album2$cooks.distance<-cooks.distance(albumSales.3)
album2$dfbeta<-dfbeta(albumSales.3)
album2$dffit<-dffits(albumSales.3)
album2$leverage<-hatvalues(albumSales.3)
album2$covariance.ratios<-covratio(albumSales.3)
pander::pander(album2)
album2
View(albumSales.3)
View(albumSales.2)
View(album2)
durbinWatsonTest(albumSales.3)
library(car)
c
durbinWatsonTest(albumSales.3)
durbinWatsonTest(albumSales.3)
durbinWatsonTest(albumSales.3)
durbinWatsonTest(albumSales.3)
durbinWatsonTest(albumSales.3)
durbinWatsonTest(albumSales.3)
durbinWatsonTest(albumSales.3)
vif(albumSales.1)
library(car)
car::vif(albumSales.3)
shapiro.test(albumSales.3)
shapiro.test(aov(albumSales.3))
shapiro.test(albumSales.3$residuals)
car::vif(albumSales.3)
plot(albumSales.3)
qqplot.resid <- qplot(sample = album2$studentized.residuals, stat="qq") + labs(
"Theoretical Values", y = "Observed Values")
library(ggplot2)
qqplot.resid <- qplot(sample = album2$studentized.residuals, stat="qq") + labs(
"Theoretical Values", y = "Observed Values")
qqplot.resid
scatter <- ggplot(album2, aes(fitted, studentized.residuals))
scatter + geom_point() + geom_smooth(method = "lm", colour = "Blue")+ labs(x = "Fitted
Values", y = "Studentized Residual")
album2$fitted <- albumSales.3$fitted.values
histogram<-ggplot(album2, aes(studentized.residuals)) + opts(legend.position =
"none") + geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
labs(x = "Studentized Residual", y = "Density")
histogram + stat_function(fun = dnorm, args = list(mean = mean(album2$studentized.
residuals, na.rm = TRUE), sd = sd(album2$studentized.residuals, na.rm = TRUE)), colour
= "red", size = 1)
histogram<-ggplot(album2, aes(studentized.residuals)) + opts(legend.position =
"none") + geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
labs(x = "Studentized Residual", y = "Density")
histogram + stat_function(fun = dnorm, args = list(mean = mean(album2$studentized.
residuals, na.rm = TRUE), sd = sd(album2$studentized.residuals, na.rm = TRUE)), colour
= "red", size = 1)
hist(album2$studentized.residuals)
hist(rstudent(albumSales.3))
bootReg <- function (formula, data, indices)
{
d <- data [i,]
fit <- lm(formula, data = d)
return(coef(fit))
}
bootReg <- function (formula, data, indices)
{
d <- data [i,]
fit <- lm(formula, data = d)
return(coef(fit))
}
bootResults<-boot(statistic = bootReg, formula = sales ~ adverts + airplay +
attract, data = album2, R = 2000)
bootResults<-boot(statistic = bootReg, formula = sales ~ adverts + airplay +
attract, data = album2, R = 2000)
bootResults<-boot(statistic = bootReg, formula = sales ~ adverts + airplay +
attract, data = album2, R = 2000)
bootResults<-boot(statistic = bootReg, formula = sales ~ adverts + airplay +
attract, data = album2, R = 2000)
library(haven)
getwd()
gfr <- read_spss("GlastonburyFestivalRegression.sav")
View(gfr)
View(gfr)
attach(gfr)
levels(MUSIC)
levels(gfr$MUSIC)
gfr$MUSIC <- as.factor(gfr$MUSIC)
levels(gfr$MUSIC)
gfr$MUSIC <- factor(gfr$MUSIC)
levels(gfr$MUSIC)
write.csv(gfr,"GlastonburyFestivalRegression.dat",quote = F,sep = "\t")
read.csv("GlastonburyFestivalRegression.dat")
View(gfr)
View(gfr)
write.csv(gfr,"GlastonburyFestivalRegression.dat",quote = F,)
read.csv("GlastonburyFestivalRegression.dat")
gfr$MUSIC <- factor( c(level 1 = crusty, level 2
gfr$MUSIC <- factor(gfr$MUSIC, labels=c("crusty", "indie kid","metaller", "no musical affiliation""))
levels(gfr$MUSIC)
attach(gfr)
levels(gfr$MUSIC)
gfr$MUSIC <- factor(gfr$MUSIC, labels=c("crusty", "indie kid","metaller", "no musical affiliation"))
levels(gfr$MUSIC)
contrasts(gfr$music)<-contr.treatment(4, base = 4)
gfr <- read_spss("GlastonburyFestivalRegression.sav")
gfr <- read_spss("GlastonburyFestivalRegression.sav")
contrasts(gfr$music)<-contr.treatment(4, base = 4)
gfr
gfr <- read_spss("GlastonburyFestivalRegression.sav")
gfr
contrasts(gfr$music)<-contr.treatment(4, base = 4)
contrasts(gfr$MUSIC) <- contr.helmert()
contrasts(gfr$MUSIC) <- contr.helmert(4,)
contrasts(gfr$MUSIC) <- contr.helmert(4)
gfr$MUSIC <- factor(gfr$MUSIC, labels=c("crusty", "indie kid","metaller", "no musical affiliation"))
attach(gfr)
levels(gfr$MUSIC)
contrasts(gfr$music)<-contr.treatment(4, base = 4)
gfr$MUSIC <- factor(gfr$MUSIC, labels=c("crusty", "indie kid","metaller", "no musical affiliation"))
gfr$MUSIC <- as.factor(gfr$MUSIC)
attach(gfr)
levels(gfr$MUSIC)
contrasts(gfr$music)<-contr.treatment(4, base = 4)
gfr <- read_spss("GlastonburyFestivalRegression.sav")
contrasts(gfr$music)<-contr.treatment(4, base = )
class(gfr$MUSIC)
gfr$MUSIC <- as.factor(gfr$MUSIC)
levels(gfr$MUSIC)
gfr$MUSIC <- factor(gfr$MUSIC, labels=c("crusty", "indie kid","metaller", "no musical affiliation"))
ls
class(MUSIC)
gfr$MUSIC <- as.factor(gfr$MUSIC)
input = ("
Species   Temp   Pulse
ex       20.8   67.9
ex       20.8   65.1
ex       24     77.3
ex       24     78.7
ex       24     79.4
ex       24     80.4
ex       26.2   85.8
ex       26.2   86.6
ex       26.2   87.5
ex       26.2   89.1
ex       28.4   98.6
ex       29    100.8
ex       30.4   99.3
ex       30.4  101.7
niv      17.2   44.3
niv      18.3   47.2
niv      18.3   47.6
niv      18.3   49.6
niv      18.9   50.3
niv      18.9   51.8
niv      20.4   60
niv      21     58.5
niv      21     58.9
niv      22.1   60.7
niv      23.5   69.8
niv      24.2   70.9
niv      25.9   76.2
niv      26.5   76.1
niv      26.5   77
niv      26.5   77.7
niv      28.6   84.7
")
Data = read.table(textConnection(Input),header=TRUE)
Input = ("
Species   Temp   Pulse
ex       20.8   67.9
ex       20.8   65.1
ex       24     77.3
ex       24     78.7
ex       24     79.4
ex       24     80.4
ex       26.2   85.8
ex       26.2   86.6
ex       26.2   87.5
ex       26.2   89.1
ex       28.4   98.6
ex       29    100.8
ex       30.4   99.3
ex       30.4  101.7
niv      17.2   44.3
niv      18.3   47.2
niv      18.3   47.6
niv      18.3   49.6
niv      18.9   50.3
niv      18.9   51.8
niv      20.4   60
niv      21     58.5
niv      21     58.9
niv      22.1   60.7
niv      23.5   69.8
niv      24.2   70.9
niv      25.9   76.2
niv      26.5   76.1
niv      26.5   77
niv      26.5   77.7
niv      28.6   84.7
")
Data = read.table(textConnection(Input),header=TRUE)
DATA
Data
write.csv(Data,"criquets.csv",quote = F)
rm(list=ls())
## Un ejemplo práctico de ancova
Data <- read.csv("criquets.csv")
## Un ejemplo práctico de ancova
Data <- read.csv("crickets.csv")
View(Data)
View(Data)
head(Data)
## Un ejemplo práctico de ancova
Data <- read.csv("crickets.csv") %>%
subset(c(2:4))
?subset
## Un ejemplo práctico de ancova
Data <- read.csv("crickets.csv") %>%
subset(select=c(2:4))
## Un ejemplo práctico de ancova
Data <- read.csv("crickets.csv") %>%
subset(select=c(2:4))
## Un ejemplo práctico de ancova
Data <- read.csv("crickets.csv") %>%
subset(select=c(2:4))
## Un ejemplo práctico de ancova
Data <- read.csv("crickets.csv")
## Un ejemplo práctico de ancova
Data <- read.csv("crickets.csv")%>%
subset(select=c(2:4))
## Un ejemplo práctico de ancova
library(dplyr)
Data <- read.csv("crickets.csv")%>%
select(2:4)
Data
viagraData<-read.delim("ViagraCovariate.dat", header = TRUE)
rm(list=ls())
viagraData<-read.delim("ViagraCovariate.dat", header = TRUE)
View(viagraData)
View(viagraData)
viagraData$dose <- factor(labels = c("Placebo","Low Dose","High Dose"))
viagraData<-read.delim("ViagraCovariate.dat", header = TRUE)
viagraData$dose <- factor(labels = c("Placebo","Low Dose","High Dose"))
viagraData$dose <- factor(labels = c("Placebo","Low Dose","High Dose"))
viagraData$dose <- as.factor(viagraData$do)
viagraData<-read.delim("ViagraCovariate.dat", header = TRUE)
viagraData$dose <- as.factor(viagraData$dose)
levels(viagraData$dose) <- c("Placebo","Low Dose","High Dose")
viagraData<-read.delim("ViagraCovariate.dat", header = TRUE)
levels(viagraData$dose) <- c("Placebo","Low Dose","High Dose")
View(viagraData)
View(viagraData)
viagraData<- as.data.frame(read.delim("ViagraCovariate.dat", header = TRUE))
viagraData$dose <- as.factor(viagraData$dose)
levels(viagraData$dose) <- c("Placebo","Low Dose","High Dose")
View(viagraData)
View(viagraData)
attach(viagraData)
library(ggplot2)
attach(viagraData)
View(viagraData)
View(viagraData)
ggplot(viagraData,aes(dose,libido))+
geom_boxplot()
ggplot(viagraData,aes(dose,partnerLibido))+
geom_boxplot()
ggplot(viagraData,aes(dose,libido))+
geom_boxplot()
ggplot(viagraData,aes(dose,partnerLibido))+
geom_boxplot()
by()
library(pastecs)
by(viagraData$libido, viagraData$dose, stat.desc)
library(car)
eveneTest(viagraData$libido, viagraData$dose, center = median)
leveneTest(viagraData$libido, viagraData$dose, center = median)
viagraModel<-aov(libido ~ dose, data = viagraData)
viagraModel
summary(viagraMode)
summary(viagraModel)
viagraModel<-aov(libido ~ dose + partnerLibido, data = viagraData)
summary(viagraModel)
viagraModel<-aov(libido ~ partnerLibido + dose, data = viagraData)
viagraModel<-aov(libido ~ dose, data = viagraData)
summary(viagraModel)
viagraModel<-aov(libido ~ partnerLibido + dose, data = viagraData)
summary(viagraModel)
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraData$dose
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido ~ partnerLibido + dose, data = viagraData)
Anova(viagraModel, type="III")
Anova(viagraModel, type="II")
Anova(viagraModel, type="I")
Anova(viagraModel, type="II")
Anova(viagraModel, type="III")
object<-effect("name of effect", modelName, se=TRUE)
object <- effect("name of effect", modelName, se=TRUE)
library(effects)
object <- effect("name of effect", modelName, se=TRUE)
viagraModel<-aov(libido ~ partnerLibido + dose, data = viagraData)
adjustedMeans<-effect("dose", viagraModel, se=TRUE)
summary(adjustedMeans)
adjustedMeans$se
adjustedMeans$response
adjustedMeans
adjustedMeans$se
summary.lm(viagraModel)
hoRS<-aov(libido ~ partnerLibido * dose , data =
viagraData)
Anova(hoRS, type=”III”)
hoRS<-aov(libido ~ partnerLibido * dose , data =
viagraData)
Anova(hoRS, type=”III”)
Anova(hoRS, type="III")
plot(ancova)
