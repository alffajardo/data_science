View(descriptive)
View(descriptive)
descriptive$n.obs
descriptive$nvar
descriptive$all.numeric
descriptive$complete.cases
descriptive$variables
View(viagraData)
View(viagraData)
descriptive_stats <- describe(~dose,data=viagraData)
descriptive_stats <- describe(viagraData~ viagraData$dose)
descriptive_stats <- describeBy(viagraData~viagraData$dose)
D
descriptive_stats <- describeBy(viagraData~viagraData$dose)
rm(list=ls())
## ANCOVA --- Andy Field Book
library(multcomp)
library(compute.es)
library(effects)
library(ggplot2)
library(pastecs)
library(WRS2)
library("psych")
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
WRS2::viagra
## some plots
ggplot(viagraData,)+
geom_boxplot(libido~dose)
## some plots
ggplot(viagraData)+
geom_boxplot(libido~dose)
## some plots
ggplot(viagraData,aes(libido,dose))+
geom_boxplot()
## some plots
ggplot(viagraData,aes(dose,libido))+
geom_boxplot()
View(viagraData)
View(viagraData)
ggplot(viagraData,aes(dose,partnerLibido))+
geom_boxplot()
?stat.desc
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
stat.desc()
stat.desc
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
rm(list=ls())
library(compute.es)
library(effects)
library(pastecs)
library(WRS2)
library("psych")
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
head(viagraData,3)
tail(viagData,3)
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
head(viagraData,3)
tail(viagraData,3)
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
head(viagraData)
tail(viagraData,)
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
library(multcomp)
library(compute.es)
library(effects)
library(ggplot2)
library(pastecs)
library(WRS2)
library("psych")
library(multcomp)
library(compute.es)
library(effects)
library(ggplot2)
library(pastecs)
library(WRS2)
library("psych")
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
head(viagraData)
tail(viagraData)
ggplot(viagraData,aes(dose,libido))+
geom_boxplot()
ggplot(viagraData,aes(dose,partnerLibido))+
geom_boxplot()
library(multcomp)
library(compute.es)
library(effects)
library(ggplot2)
library(pastecs)
library(WRS2)
library("psych")
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
head(viagraData)
tail(viagraData)
ggplot(viagraData,aes(dose,libido))+
geom_boxplot()
ggplot(viagraData,aes(dose,partnerLibido))+
geom_boxplot()
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
library(multcomp)
library(compute.es)
library(effects)
library(ggplot2)
library(pastecs)
library(WRS2)
library(psych)
library(pander)
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
head(viagraData)
tail(viagraData)
ggplot(viagraData,aes(dose,libido))+
geom_boxplot()
ggplot(viagraData,aes(dose,partnerLibido))+
geom_boxplot()
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
library(multcomp)
library(compute.es)
library(effects)
library(ggplot2)
library(pastecs)
library(WRS2)
library(psych)
library(pander)
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
head(viagraData)
tail(viagraData)
ggplot(viagraData,aes(dose,libido))+
geom_boxplot()
ggplot(viagraData,aes(dose,partnerLibido))+
geom_boxplot()
pander(by(viagraData$libido, viagraData$dose, stat.desc))
pander(by(viagraData$partnerLibido, viagraData$dose, stat.desc))
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
leveneTest(viagraData$libido, viagraData$dose, center = median)
library(car2)
install.packages(car2)
install.packages("car2")
library(car)
leveneTest(viagraData$libido, viagraData$dose, center = median)
library(multcomp)
library(compute.es)
library(effects)
library(ggplot2)
library(pastecs)
library(WRS2)
library(psych)
library(pander)
library(car)
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
head(viagraData)
tail(viagraData)
ggplot(viagraData,aes(dose,libido))+
geom_boxplot()
ggplot(viagraData,aes(dose,partnerLibido))+
geom_boxplot()
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
leveneTest(viagraData$libido, viagraData$dose, center = median)
library(multcomp)
library(compute.es)
library(effects)
library(ggplot2)
library(pastecs)
library(WRS2)
library(psych)
library(pander)
library(car)
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
head(viagraData)
tail(viagraData)
ggplot(viagraData,aes(dose,libido))+
geom_boxplot()
ggplot(viagraData,aes(dose,partnerLibido))+
geom_boxplot()
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
leveneTest(viagraData$libido, viagraData$dose, center = median)
lm_partner <- lm(partner.libido~dose,data=viagraData)
lm_partner <- lm(partnerLibido~dose,data=viagraData)
lm_partner
plot(viagraData$partnerLibido,col=factor(viagraData$dose),pch=16,
cex=1.2)
abline(lm_partner,lwd=3,col="darkgreen")
o
lm_partner <- lm(partnerLibido~dose,data=viagraData)
lm_partner
plot(viagraData$partnerLibido,col=factor(viagraData$dose),pch=16,
cex=1.2)
abline(lm_partner,lwd=3,col="darkgreen")
plot(viagraData$dose,viagraData$partnerLibido,col=factor(viagraData$dose),pch=16,
cex=1.2)
plot(viagraData$dose,viagraData$partnerLibido)
aov_partner <- aov(lm_partner)
aov_partner <- aov(lm_partner)
anova(aov_partner)
anova(aov_partner)
viagraModel<-aov(libido ~ dose + partnerLibido, data = viagraData)
viagraModel
library(multcomp)
library(compute.es)
library(effects)
library(ggplot2)
library(pastecs)
library(WRS2)
library(psych)
library(pander)
library(car)
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
head(viagraData)
tail(viagraData)
ggplot(viagraData,aes(dose,libido))+
geom_boxplot()
ggplot(viagraData,aes(dose,partnerLibido))+
geom_boxplot()
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
leveneTest(viagraData$libido, viagraData$dose, center = median)
lm_partner <- lm(partnerLibido~dose,data=viagraData)
lm_partner
aov_partner <- aov(lm_partner)
anova(aov_partner)
viagraModel<-aov(libido ~ dose + partnerLibido, data = viagraData)
viagraModel
viagraModel<-aov(libido ~ dose + partnerLibido, data = viagraData)
viagraModel
viagraModel<-aov(libido ~ dose - partnerLibido, data = viagraData)
viagraModel
viagraModel<-aov(libido ~ dose * partnerLibido, data = viagraData)
viagraModel
viagraModel<-aov(libido ~ dose + partnerLibido, data = viagraData)
viagraModel
summary(aov(libido~dose,data=viagraData))
?Anova
Anova(viagraModel,type="I")
Anova(viagraModel,type="3")
Anova(viagraModel,type="1")
Anova(viagraModel,type="III")
Anova(viagraModel,type="3")
viagraModel<-aov(libido ~ dose + partnerLibido, data = viagraData)
Anova(viagraModel,type="3")
Anova(viagraModel,type="III")
viagraModel<-aov(libido ~ dose - partnerLibido, data = viagraData)
viagraModel<-aov(libido ~ dose - partnerLibido, data = viagraData)
viagraModel
aov(libido ~ dose + partnerLibido, data = viagraData)
aov(libido ~ dose * partnerLibido, data = viagraData)
aov(libido ~ dose ^ partnerLibido, data = viagraData)
aov(libido ~ dose / partnerLibido, data = viagraData)
aov(libido ~ dose + partnerLibido, data = viagraData)
Anova(viagraModel,type="III")
contrasts(viagraData$dose) <- cbind(c(-2,1,1),c(0,-1,1))
viagraData$dose
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido ~ partnerLibido + dose, data = viagraData)
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido ~ partnerLibido + dose, data = viagraData)
Anova(viagraModel, type="III")
drop1(lm_partner, ~., test="F")
drop1(viagraModel, ~., test="F")
ontrasts(viagraData$dose)<-contr.helmert(3)
contrasts(viagraData$dose)<-contr.helmert(3)
viagraData$dose
?effect
require(boot)
# Generates the variables X and Y
set.seed(3764)
x <- rnorm(20,mean = 5,sd=3)
?set.seed
set.seed(30403)
set.seed()
set.seed()$
set.seed()[[1]]
set.seed()[1]
# Generates the variables X and Y
set.seed(3764)
x <- rnorm(20,mean = 5,sd=3)
y <- rnorm(20,mean = 100,sd=3)
Data <- data.frame(x,y)
par(col.axis="gray25",col.lab="gray25",col.main="gray25") # Graphical parameters color settings
layout(matrix(c(1,1,2,1,1,3), 2, 3, byrow = TRUE))        # Combines plots
# Scatter plot of X & Y variables
plot(Data$x,Data$y,pch=20,cex=2,col="darkslateblue",main="Linear model & Boostrap",cex.main=2.5,cex.lab=1.5,axes=F,ylab="Y",xlab="X",las=1)
axis(1, lty=1, col="gray25", las=1,lwd=3,cex.axis=1.5)
axis(2, lty=1, col="gray25", las=1,lwd=3,cex.axis=1.5)
# Confidence Intervals at 95%
newx <- seq(min(x), max(x), length.out=20)
preds <- predict(lm(y~x), newdata = data.frame(x=newx),interval = 'confidence')
polygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), col = '#483D8B64', border = NA)
# Regression line
abline(lm(y~x,data = Data),col="#483D8BFF",lwd=6)
#### Boostrapping with Boot ####
# Function that applies the Lineal regression and obtains only the betas and r2
stats_estimate <- function(data, statistics) {
d <- data[statistics, ]
linModel <- lm(y~x,data = d)
betas <- as.numeric(linModel$coefficients[2])
r2 <- summary(linModel)$r.square
estimates <- c(betas,r2)
return(estimates)   }
# This generates a boot objet with the parameters estimated from our function
boost <- boot(data=Data,statistic = stats_estimate, R=1000)
# in our case t1* = betas & t2* =r2
print(boost)
# Histogram of the betas estimation
betas <- boost$t[,1] # Estimated beta values
CI <- boot.ci(boost, index = 1, conf = 0.95, type = 'bca')[[4]][c(4,5)]     # Confidence Interval of the beta obtained with boot.ci
hist(betas,border=NA,probability = TRUE,cex.main=2,main=expression(paste("Estimated distribution of ", beta)),xlab="betas",
,ylim=c(0,max(density(betas)[[2]])*1.1),xlim=mean(betas)+c(-3*sd(betas),3*sd(betas)),lwd=2,cex.lab=1.5)
polygon(density(betas),col="#483D8B64",border = "#483D8BFF",lwd=3)          # Shaded density
abline(v=c(mean(betas),CI),lwd=c(1.5,2,2),lty=c(2,1,1),col="#483D8BFF")     # Lines of the mean, lower CI and upper CI
# Histogram of the r2 estimation
r2 <- boost$t[,2] # Estimated r2 values
CI <- boot.ci(boost, index = 2, conf = 0.95, type = 'bca')[[4]][c(4,5)]     # Confidence Interval of the beta obtained with boot.ci
hist(r2,border=NA,probability = TRUE,cex.main=2,main=expression(paste("Estimated distribution of ", r^2)),xlab=expression(r^2),
,ylim=c(0,max(density(r2)[[2]])*1.1),xlim=mean(r2)+c(-3*sd(r2),3*sd(r2)),lwd=2,cex.lab=1.5)
polygon(density(r2),col="#483D8B64",border = "#483D8BFF",lwd=3)             # Shaded density
abline(v=c(mean(r2),CI),lwd=c(1.5,2,2),lty=c(2,1,1),col="#483D8BFF")        # Lines of the mean, lower CI and upper CI
© 2018 GitHub, Inc.
© 2018 GitHub, Inc.
© 2018 GitHub, Inc.
rm(list=ls())
require(boot)
# Generates the variables X and Y
set.seed(3764)
x <- rnorm(20,mean = 5,sd=3)
y <- rnorm(20,mean = 100,sd=3)
Data <- data.frame(x,y)
par(col.axis="gray25",col.lab="gray25",col.main="gray25") # Graphical parameters color settings
layout(matrix(c(1,1,2,1,1,3), 2, 3, byrow = TRUE))        # Combines plots
# Scatter plot of X & Y variables
plot(Data$x,Data$y,pch=20,cex=2,col="darkslateblue",main="Linear model & Boostrap",cex.main=2.5,cex.lab=1.5,axes=F,ylab="Y",xlab="X",las=1)
axis(1, lty=1, col="gray25", las=1,lwd=3,cex.axis=1.5)
axis(2, lty=1, col="gray25", las=1,lwd=3,cex.axis=1.5)
# Confidence Intervals at 95%
newx <- seq(min(x), max(x), length.out=20)
preds <- predict(lm(y~x), newdata = data.frame(x=newx),interval = 'confidence')
preds <- predict(lm(y~x), newdata = data.frame(x=newx),interval = 'confidence')
polygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), col = '#483D8B64', border = NA)
polygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), col = '#483D8B64', border = NA)
polygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), col = '#483D8B64', border = NA)
polygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), col = '#483D8B64', border = NA)
polygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), col = '#483D8B64', border = NA)
# Regression line
abline(lm(y~x,data = Data),col="#483D8BFF",lwd=6)
axis(1, lty=1, col="gray25", las=1,lwd=3,cex.axis=1.5)
axis(2, lty=1, col="gray25", las=1,lwd=3,cex.axis=1.5)
# Confidence Intervals at 95%
newx <- seq(min(x), max(x), length.out=20)
preds <- predict(lm(y~x), newdata = data.frame(x=newx),interval = 'confidence')
polygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), col = '#483D8B64', border = NA)
# Regression line
abline(lm(y~x,data = Data),col="#483D8BFF",lwd=6)
y <- rnorm(20,mean = 100,sd=3)
Data <- data.frame(x,y)
par(col.axis="gray25",col.lab="gray25",col.main="gray25") # Graphical parameters color settings
layout(matrix(c(1,1,2,1,1,3), 2, 3, byrow = TRUE))        # Combines plots
# Scatter plot of X & Y variables
plot(Data$x,Data$y,pch=20,cex=2,col="darkslateblue",main="Linear model & Boostrap",cex.main=2.5,cex.lab=1.5,axes=F,ylab="Y",xlab="X",las=1)
axis(1, lty=1, col="gray25", las=1,lwd=3,cex.axis=1.5)
axis(2, lty=1, col="gray25", las=1,lwd=3,cex.axis=1.5)
# Confidence Intervals at 95%
newx <- seq(min(x), max(x), length.out=20)
preds <- predict(lm(y~x), newdata = data.frame(x=newx),interval = 'confidence')
polygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), col = '#483D8B64', border = NA)
# Regression line
abline(lm(y~x,data = Data),col="#483D8BFF",lwd=6)
#### Boostrapping with Boot ####
# Function that applies the Lineal regression and obtains only the betas and r2
stats_estimate <- function(data, statistics) {
d <- data[statistics, ]
linModel <- lm(y~x,data = d)
betas <- as.numeric(linModel$coefficients[2])
r2 <- summary(linModel)$r.square
estimates <- c(betas,r2)
return(estimates)   }
# This generates a boot objet with the parameters estimated from our function
boost <- boot(data=Data,statistic = stats_estimate, R=1000)
# in our case t1* = betas & t2* =r2
print(boost)
# Histogram of the betas estimation
betas <- boost$t[,1] # Estimated beta values
CI <- boot.ci(boost, index = 1, conf = 0.95, type = 'bca')[[4]][c(4,5)]     # Confidence Interval of the beta obtained with boot.ci
hist(betas,border=NA,probability = TRUE,cex.main=2,main=expression(paste("Estimated distribution of ", beta)),xlab="betas",
,ylim=c(0,max(density(betas)[[2]])*1.1),xlim=mean(betas)+c(-3*sd(betas),3*sd(betas)),lwd=2,cex.lab=1.5)
polygon(density(betas),col="#483D8B64",border = "#483D8BFF",lwd=3)          # Shaded density
abline(v=c(mean(betas),CI),lwd=c(1.5,2,2),lty=c(2,1,1),col="#483D8BFF")     # Lines of the mean, lower CI and upper CI
# Histogram of the r2 estimation
r2 <- boost$t[,2] # Estimated r2 values
CI <- boot.ci(boost, index = 2, conf = 0.95, type = 'bca')[[4]][c(4,5)]     # Confidence Interval of the beta obtained with boot.ci
hist(r2,border=NA,probability = TRUE,cex.main=2,main=expression(paste("Estimated distribution of ", r^2)),xlab=expression(r^2),
,ylim=c(0,max(density(r2)[[2]])*1.1),xlim=mean(r2)+c(-3*sd(r2),3*sd(r2)),lwd=2,cex.lab=1.5)
polygon(density(r2),col="#483D8B64",border = "#483D8BFF",lwd=3)             # Shaded density
abline(v=c(mean(r2),CI),lwd=c(1.5,2,2),lty=c(2,1,1),col="#483D8BFF")        # Lines of the mean, lower CI and upper CI
© 2018 GitHub, Inc.
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
rm(list=ls())
library(multcomp)
library(compute.es)
library(effects)
library(ggplot2)
library(pastecs)
library(WRS2)
library(psych)
library(pander)
library(car)
viagraData <- read.csv("ViagraCovariate.csv",sep="\t")
viagraData$dose <- factor(viagraData$dose,
labels = c("Placebo","Low Dose","Hight Dose"))
head(viagraData)
tail(viagraData)
ggplot(viagraData,aes(dose,libido))+
geom_boxplot()
ggplot(viagraData,aes(dose,partnerLibido))+
geom_boxplot()
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
leveneTest(viagraData$libido, viagraData$dose, center = median)
lm_partner <- lm(partnerLibido~dose,data=viagraData)
lm_partner
aov_partner <- aov(lm_partner)
anova(aov_partner)
viagraModel<-aov(libido ~ dose - partnerLibido, data = viagraData)
Anova(viagraModel,type="3")
Anova(viagraModel,type="III")
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido ~ partnerLibido + dose, data = viagraData)
Anova(viagraModel, type="III")
adjustedMeans<-effect("dose", viagraModel, se=TRUE)
summary(adjustedMeans)
adjustedMeans$se
summary.lm(viagraModel)
summary.lm(viagraModel)
postHocs<-glht(viagraModel, linfct = mcp(dose = "Tukey"))
summary(postHocs)
confint(postHocs)
postHocs<-glht(viagraModel, linfct = mcp(dose = "Tukey"))
summary(postHocs)
confint(postHocs)
plots(viagraModel)
par(mfrow=c(2,2))
plot(viagraModel)
unlink('ancova_data_cache', recursive = TRUE)
knit_with_parameters('~/GitHub/data_science/ancova_data.Rmd')
hoRS<-aov(libido ~ partnerLibido + dose + dose:partnerLibido, data =
viagraData)
hoRS<-aov(libido ~ partnerLibido + dose + dose:partnerLibido, data =
viagraData)
hoRS
View(viagraData)
View(viagraData)
Anova(viagraModel,type="3")
Anova(viagraModel,type="III")
lm_partner <- lm(partnerLibido~dose,data=viagraData)
lm_partner
aov_partner <- aov(lm_partner)
aov_partner <- aov(lm_partner)
anova(aov_partner)
viagraModel<-aov(libido ~ dose + partnerLibido, data = viagraData)
Anova(viagraModel,type="3")
Anova(viagraModel,type="III")
viagraModel<-aov(libido ~ dose + partnerLibido, data = viagraData)
Anova(viagraModel,type="3")
Anova(viagraModel,type="III")
hoRS<-aov(libido ~ partnerLibido*dose, data = viagraData)
hoRS
Anova(hoRS, type=”III”)
hoRS
Anova(hoRS, type=”3”)
hoRS<-update(viagraModel, .~. + partnerLibido
hoRS<-update(viagraModel, .~. + partnerLibido)
hoRS<-update(viagraModel, .~. + partnerLibido:dose)
Anova(hoRS, type=”III”)
Anova(hoRS, type="III")
